name: CI Pipeline
on:
  push:
    branches:
      - main
      - stag
  pull_request:
    branches:
      - main
      - stag
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
      SONAR_HOST_URL:
        required: true
      HARBOR_USERNAME:
        required: true
      HARBOR_PASSWORD:
        required: true
      HARBOR_REGISTRY:
        required: true
jobs:
  sonar_scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      
      - name: Set up SonarQube Scanner
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=devops
            -Dsonar.sources=.
            -Dsonar.exclusions=**/*.java,**/node_modules/**,**/*.json
            -Dsonar.language=js,ts
            -Dsonar.sourceEncoding=UTF-8
  
  build_and_push:
    needs: sonar_scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set up Docker
        uses: docker/setup-qemu-action@v2
      
      - name: Login to Harbor
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_PASSWORD }}
          registry: ${{ secrets.HARBOR_REGISTRY }}
      
      - name: Set environment variables
        id: set-env
        run: |
          echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          elif [[ "${GITHUB_REF}" == "refs/heads/stag" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          fi
          echo "COMMIT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      
      - name: Build and Push Docker Images
        run: |
          SERVICE_NAME="${REPO_NAME,,}"
          IMAGE_NAME="${{ secrets.HARBOR_REGISTRY }}/${ENVIRONMENT}/${SERVICE_NAME}"
          TIMESTAMP=$(date +%s)
          
          # Build Docker image
          docker build -t "$IMAGE_NAME:$COMMIT_SHA-$TIMESTAMP" -t "$IMAGE_NAME:latest" .
          
          # Push Docker image
          docker push "$IMAGE_NAME:$COMMIT_SHA-$TIMESTAMP"
          docker push "$IMAGE_NAME:latest"
